variables:
  DOCKER_REG: dk.jingli365.com
  DOCKER_NAME: $CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME
  DOCKER_CI_NAME: $DOCKER_REG/$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME:$CI_COMMIT_SHA
  DOCKER_BRANCH_NAME: $DOCKER_REG/$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG
  NPM_CACHE_DIR: /cache/build-cache/npmhash/
  JL_APP_DAEMON: "true"
  JL_APP_COMMAND: node server.js >/data/log/nohup.out 2>&1
  JL_APP_DAEMON_WAIT_INIT: log/nohup.out
  JL_APP_CLOUD_APP_ID: 756b12b3-e243-41ae-982f-dbdfb7ea7e92
  JL_APP_CLOUD_APP_SECRET: 6c8f2cfd-7aa4-48c7-9d5e-913896acec12
  JL_APP_LINK_VERSION: 2

stages:
  - build
  - docker
  - deploy

image: docker:git

before_script:
  - 'eval $(ssh-agent -s) && echo "$SSH_PRIVATE_KEY">.k && chmod 600 .k && ssh-add .k && rm -f .k'
  - 'mkdir -p ~/.ssh && echo -e "Host *\n\tStrictHostKeyChecking no\n\tSendEnv JL_APP_*\n\n" > ~/.ssh/config'
  - mkdir -p /cache/build-cache/.npm && ln -s /cache/build-cache/.npm ~/

build:dist:
  stage: build
  only:
    - branches
  image: $DOCKER_REG/jl-build:v3
  tags:
    - serial
  cache:
    key: $CI_PIPELINE_ID
    paths:
      - dist/
  script:
    - mkdir -p $NPM_CACHE_DIR/`npmhash`/node_modules && ln -s $NPM_CACHE_DIR/`npmhash`/node_modules .
    - echo `npmhash`
    - git submodule update --init --checkout
    - npm install
    - gulp tarball -n $CI_COMMIT_REF_SLUG
    - scp $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-*.tar.gz test@git.l.jingli365.com:~/versions/

build:image:
  stage: docker
  cache:
    key: $CI_PIPELINE_ID
    paths:
      - dist/
  script:
    - docker login -u dockeruser -p $DOCKER_PASSWD $DOCKER_REG
    - docker build -t $DOCKER_CI_NAME . --build-arg NPM_TOKEN ${NPM_TOKEN}
    - docker push $DOCKER_CI_NAME

deploy:master:
  stage: deploy
  only:
    - /^master$/
  environment:
    name: dev
    url: https://l.jingli365.com
  variables:
    JL_APP_V2_HOST: https://l.jingli365.com/proj/web-jingli-v2
    JL_APP_CLOUDKEY: jinglicloud2017
    JL_APP_CLOUDAPI: http://l.jingli365.com/cloud/api/v1
    JL_APP_CLOUD: http://l.jingli365.com/cloud
    JL_APP_APPROVE_SERVER_URL: https://l.jingli365.com/proj/svr-trip-approve/api/v1
  script:
    - docker login -u dockeruser -p $DOCKER_PASSWD $DOCKER_REG
    - docker pull $DOCKER_CI_NAME
    - docker tag $DOCKER_CI_NAME $DOCKER_BRANCH_NAME
    - docker push $DOCKER_BRANCH_NAME
    - echo deploy to https://l.jingli365.com
    - ssh test@l.jingli365.com /home/test/bin/docker_start.sh $DOCKER_REG $DOCKER_NAME $CI_COMMIT_REF_SLUG

deploy:test:
  stage: deploy
  only:
    - /^test$/
  environment:
    name: test
    url: https://t.jingli365.com
  variables:
    JL_APP_V2_HOST: https://t.jingli365.com/proj/web-jingli-v2
    JL_APP_CLOUDKEY: jinglicloud2017
    JL_APP_CLOUDAPI: http://t.jingli365.com/cloud/api/v1
    JL_APP_CLOUD: http://t.jingli365.com/cloud
    JL_APP_APPROVE_SERVER_URL: https://t.jingli365.com/proj/svr-trip-approve/api/v1
  script:
    - docker login -u dockeruser -p $DOCKER_PASSWD $DOCKER_REG
    - docker pull $DOCKER_CI_NAME
    - docker tag $DOCKER_CI_NAME $DOCKER_BRANCH_NAME
    - docker push $DOCKER_BRANCH_NAME
    - echo deploy to https://t.jingli365.com
    - ssh test@l.jingli365.com /home/test/bin/docker_start.sh $DOCKER_REG $DOCKER_NAME $CI_COMMIT_REF_SLUG

deploy:release:
  stage: deploy
  only:
    - /^release$/
  when: manual
  environment:
    name: release
    url: https://j.jingli365.com
  variables:
    JL_APP_V2_HOST: https://j.jingli365.com
    JL_APP_CLOUDKEY: jinglicloud2017
    JL_APP_CLOUDAPI: https://j.jingli365.com/cloud/api/v1
    JL_APP_CLOUD: https://j.jingli365.com/cloud
    JL_APP_APPROVE_SERVER_URL: https://j.jingli365.com/proj/svr-trip-approve/api/v1
  script:
    - docker login -u dockeruser -p $DOCKER_PASSWD $DOCKER_REG
    - docker pull $DOCKER_CI_NAME
    - docker tag $DOCKER_CI_NAME $DOCKER_BRANCH_NAME
    - docker push $DOCKER_BRANCH_NAME
    - echo deploy to https://j.jingli365.com
    - ssh test@j.jingli365.com /home/test/bin/docker_start.sh $DOCKER_REG $DOCKER_NAME $CI_COMMIT_REF_SLUG

deploy:demo:
  stage: deploy
  only:
    - /^master|test|release|demo$/
  when: manual
  environment:
    name: demo
    url: https://demo.jingli365.com
  variables:
    JL_APP_V2_HOST: https://demo.jingli365.com
    JL_APP_CLOUDKEY: jinglicloud2017
    JL_APP_CLOUDAPI: https://demo.jingli365.com/proj/svr-jlbudget/
    JL_APP_CLOUD: https://demo.jingli365.com/pro/web-cloud-mgr/
    JL_APP_APPROVE_SERVER_URL: https://demo.jingli365.com/proj/svr-trip-approve/api/v1
  script:
    - docker login -u dockeruser -p $DOCKER_PASSWD $DOCKER_REG
    - docker pull $DOCKER_CI_NAME
    - docker tag $DOCKER_CI_NAME $DOCKER_BRANCH_NAME
    - docker push $DOCKER_BRANCH_NAME
    - echo deploy to https://demo.jingli365.com
    - ssh test@demo.jingli365.com /home/test/bin/docker_start.sh $DOCKER_REG $DOCKER_NAME $CI_COMMIT_REF_SLUG

deploy:tester:
  stage: deploy
  when: manual
  environment:
    name: tester/$GITLAB_USER_ID
    url: https://review.l.jingli365.com/vm/$GITLAB_USER_ID/$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME
  variables:
    JL_APP_HOST: //review.l.jingli365.com/tester/$GITLAB_USER_ID/$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME
    JL_APP_V2_HOST: //review.l.jingli365.com/tester/$GITLAB_USER_ID/$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME
    JL_APP_REDIS: redis://dockerhost:16379
    JL_APP_POSTGRES: postgres://test:JingliTest0418@dockerhost:15432/tester_$GITLAB_USER_ID
    JL_APP_POSTGRES_INITDB: tester_$GITLAB_USER_ID
    JL_APP_CLOUDKEY: jinglicloud2017
    JL_APP_CLOUDAPI: http://t.jingli365.com/cloud/api/v1
    JL_APP_CLOUD: http://t.jingli365.com/cloud
  script:
    - docker login -u dockeruser -p $DOCKER_PASSWD $DOCKER_REG
    - docker pull $DOCKER_CI_NAME
    - docker tag $DOCKER_CI_NAME $DOCKER_REG/$DOCKER_NAME:tester-$GITLAB_USER_ID
    - docker push $DOCKER_REG/$DOCKER_NAME:tester-$GITLAB_USER_ID
    - echo deploy to https://review.l.jingli365.com/tester/$GITLAB_USER_ID
    - ssh test@l.jingli365.com /home/test/bin/docker_start.sh $DOCKER_REG $DOCKER_NAME tester-$GITLAB_USER_ID

deploy:vm:
  stage: deploy
  when: manual
  environment:
    name: vm/$GITLAB_USER_ID
    url: https://review.l.jingli365.com/vm/$GITLAB_USER_ID/$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME
  variables:
    JL_APP_HOST: //review.l.jingli365.com/vm/$GITLAB_USER_ID/$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME
    JL_APP_V2_HOST: //review.l.jingli365.com/tester/$GITLAB_USER_ID/$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME
    JL_APP_REDIS: redis://l.jingli365.com:16379
    JL_APP_POSTGRES: postgres://test:JingliTest0418@l.jingli365.com:15432/tester_$GITLAB_USER_ID
    JL_APP_POSTGRES_INITDB: vm_$GITLAB_USER_ID
  script:
    - docker login -u dockeruser -p $DOCKER_PASSWD $DOCKER_REG
    - docker pull $DOCKER_CI_NAME
    - docker tag $DOCKER_CI_NAME $DOCKER_REG/$DOCKER_NAME:vm-$GITLAB_USER_ID
    - docker push $DOCKER_REG/$DOCKER_NAME:vm-$GITLAB_USER_ID
    - echo deploy to https://review.l.jingli365.com/vm/$GITLAB_USER_ID
    - ssh test@192.168.1.140 /home/test/bin/docker_start.sh $DOCKER_REG $DOCKER_NAME vm-$GITLAB_USER_ID

