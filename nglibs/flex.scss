
@mixin flex-dir($direction){
  display: flex;
  flex-direction: $direction;
  @if $direction == row{
    width: 100%;
  } @else {
    height: 100%;
  }
}

@mixin flex-row(){
  @include flex-dir(row);
}

@mixin flex-col(){
  @include flex-dir(column);
}

@mixin flex-default($grow){
  > *{
    flex: $grow;
  }
}

@mixin flex-nth($grows){
  @if type_of($grows) == list {
    @for $n from 1 through length($grows) {
      > *:nth-child(#{$n}) {
        flex: nth($grows, $n);
      }
    }
  } @else {
    > *:first-child{
      flex: $grows;
    }
  }
}

@mixin flex-last($grows){
  @if type_of($grows) == list {
    @for $n from 1 through length($grows) {
      > *:nth-last-child(#{$n}) {
        flex: nth($grows, $n);
      }
    }
  } @else {
    > *:last-child{
      flex: $grows;
    }
  }
}

@mixin flex-split($grows, $direction: row){
  @include flex-dir($direction);
  @include flex-default(1);
  @include flex-nth($grows);
}


.flex-111{
  @include flex-row();
  @include flex-default(1);
}
.flex-10{
  @include flex-row();
  @include flex-default(1);
  @include flex-last(none);
}
.flex-01{
  @include flex-row();
  @include flex-default(1);
  @include flex-nth(none);
}
.flex-010{
  @include flex-row();
  @include flex-default(1);
  @include flex-nth(none);
  @include flex-last(none);
}
.flex-10x{
  @include flex-row();
  @include flex-nth(1);
  @include flex-default(none);
}
.flex-c111{
  @include flex-col();
  @include flex-default(1);
}
.flex-c10{
  @include flex-col();
  @include flex-default(1);
  @include flex-last(none);
}
.flex-c01{
  @include flex-col();
  @include flex-default(1);
  @include flex-nth(none);
}
.flex-c010{
  @include flex-col();
  @include flex-default(1);
  @include flex-nth(none);
  @include flex-last(none);
}

.fix-flex-height{   //需要子元素height100%的情况下,解决safri会出bug的问题
  position: relative;
  &> *{
    position: absolute;
    top: 0;
    bottom: 0;
  }
}
